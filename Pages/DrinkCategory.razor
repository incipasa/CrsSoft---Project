@page "/drinkCategory"
@using FoodsAndDrinks.Data
@inject DrinkCategoryService objDrinkCategoryService
@inject DrinkService objDrinkService


<NavLink class="nav-link" href="drinkRegion">
    <span class="oi oi-list-rich"></span> Drink Regions
</NavLink>

<NavLink class="nav-link" href="Drink">
    <span class="oi oi-list-rich"></span> Drinks
</NavLink>


<h1>Category Information</h1>

@if (objDrinkCategory == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th> Category ID</th>
                <th> Category Name</th>
                <th> Drink ID</th>
                <th> Drink Name </th>
                <th> Recipe</th>

            </tr>
        </thead>
        <tbody>
            @foreach (var drink in objDrink)
            {

                    <tr>
                        <td>@drink.DrinkCategoryInfo.DrinkCategoryId</td>
                        <td>@drink.DrinkCategoryInfo.DrinkCategoryName</td>
                        <td>@drink.DrinkId</td>
                        <td>@drink.DrinkName</td>
                        <td>@drink.DrinkRecipe</td>

                    </tr>
                
            }
        </tbody>
    </table>
}

@code {
    List<DrinkCategoryInfo> objDrinkCategory;
    List<DrinkInfo> objDrink;
    protected override async Task OnInitializedAsync()
    {
        objDrinkCategory = await Task.Run(() => objDrinkCategoryService.GetDrinkCategory());
        objDrink = await Task.Run(() => objDrinkService.GetDrink());

        SortByDrinkCategory sortByDrinkCategory = new SortByDrinkCategory();
        objDrink.Sort(sortByDrinkCategory);
    }

}
